commit SHA1SHA1SHA1 (HEAD, tag: refs/tags/12.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Thu Jul 15 00:00:00 2010 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 12.00
    
    Posted by David Fishburn
    
    New Features
    ---------
    - A number of changes around the Oracle formating instructions.  Support for packages when describing certain objects.  These changes were provided by Sergey Khorev.
    - Improved the parsing of Perl strings when prompting for variables.
    - Made some additional changes to the variable_def_regex for how you can specify it from Vim modelines and DBSetOption.  This makes it much more flexible.
    
    Bug Fixes
    ---------
    - If the word "profile" was used in a dbext profile name dbext would report the error: "dbext: Profiles cannot be nested" (Chris Cierpisz).
    - Corrected the regex used to find object owner names (Sergey Khorev).

 autoload/dbext.vim     |  142 ++++++++++++++++++++++++++++++++----------------
 autoload/dbext_dbi.vim |    8 ++-
 doc/dbext.txt          |   95 +++++++++++++++++---------------
 plugin/dbext.vim       |   36 ++-----------
 4 files changed, 155 insertions(+), 126 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/11.01)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Sep 8 00:00:00 2009 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 11.01
    
    Post by David Fishburn
    Bug Fixes
    ---------
    - If a large result set is retrieved, there is a significant performance delay which was introduced in 11.00.  This was related to the new g:dbext_rows_affected feature (Tocer).
    - Error E15: Invalid expression: b:dbext_sqlvar_mv[var] is reported if you are using saved variables and then modified the query with a new variable.  Now the saved variables are used for the known variables and you are prompted for the unknown.

 autoload/dbext.vim     |   24 ++++++++++++++++--------
 autoload/dbext_dbi.vim |    6 +++---
 doc/dbext.txt          |   17 +++++++++++++++--
 plugin/dbext.vim       |    6 +++---
 4 files changed, 37 insertions(+), 16 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/11.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sun Aug 23 00:00:00 2009 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 11.00
    
    Posted by David Fishburn
    
    New Features
    ------------
    - When autoclose is enabled, a message is displayed indicating autoclose is enabled.  This message will now also include the number of rows affected by the last statement (if applicable).  This is available for all database interfaces which can provide this information.  Vim scripts or mappings have access to this value by referencing the g:dbext_rows_affected variable (Philippe Moravie).
    - The Select, Update, Delete, Alter and Drop commands will now complete table names.
    - Revamped the saved variables (see |dbext-tutorial-variables|).  dbext checks your queries and will prompt for variables (see |dbext-prompting|).  dbext uses regular expressions to determine which variables should be prompted.  To see how you can easily extend the regular expressions follow the tutorial.  This replaces the previous method which was too limiting.  The new technique uses Vim's standard regular expressions.  This introduces the variable_def_regex dbext option and deprecates the variable_def dbext option.
    - With the introduction of saved variables, you are now prompted during SQL execution to determine whether the previously saved variables should be substituted.
    
    Bug Fixes
    ---------
    - If you re-sourced plugin/dbext.vim you would receive the following error: E227: mapping already exists for <Leader>sas
    - Errors were reported about undefined variable, dbext_sqlvar_temp_mv,  if executing a SQL statement directly from a filetype which was not SQL (i.e. PHP, Java, csharp, ...).
    - If saved variables were in use, it was possible for dbext to used the replaced variables without the user knowing.  For example stored procedures could be created with the replaced strings instead of the variables.

 autoload/dbext.vim     |  391 ++++++++++++++++++++++++++++++++++++++++++-----
 autoload/dbext_dbi.vim |   18 ++-
 doc/dbext.txt          |  161 +++++++++++++++++---
 plugin/dbext.vim       |   27 ++--
 4 files changed, 515 insertions(+), 82 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/10.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sat Mar 14 00:00:00 2009 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 10.00
    
    Posted by David Fishburn
    
    New Features
    ------------
    - Added new database support for SQL Anywhere UltraLite (11.x).
    - Added new database support for Firebird (2.x).
    - Added "@@variable" style to the list of bypassed variable names along with IN, OUT, INOUT and DECLARE.
    - When listing stored variables, you can now remove multiple lines using visual mode.
    - When closing the result window (using "q" or DBResultsClose) you are intentionally returned to the buffer which opened the window instead of allowing Vim to choose which window.
    
    Bug Fixes
    ---------
    - The version 9.00 release of dbext broke modeline support.
    - When listing variables the following error could be reported: E121: Undefined variable
    - It was not possible to retrieve more than 500 characters from a character or binary column in the database when using DBI or ODBC.  Adding driver_parms=LongReadLen=4096 now works correctly.  You can also change this after you are connected to the database using DBSetOption LongReadLen=4096.  Running DBListConnections will display the current setting for each database connection currently open.

 autoload/dbext.vim     |  413 +++++++++++++++++++++++++++++++++++++++++++-----
 autoload/dbext_dbi.vim |   15 +-
 doc/dbext.txt          |   51 ++++++-
 plugin/dbext.vim       |  100 ++++++------
 4 files changed, 480 insertions(+), 99 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/9.0)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sat Jan 10 00:00:00 2009 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 9.0
    
    Posted by David Fishburn
    New Features
    ------------
    - Added the ability to set and store SQL variables for each buffer.  This will reduce prompting for statements which are often re-used.  Added support for listing and deleting SQL variables.   Initial prototype by Garrison Yu.
    - Added option, g:dbext_default_variable_remember, to control whether SQL variables should be stored when prompted.
    - Improved the parsing of SQL statements to account for procedural language.  If a IN, OUT, INOUT or DECLARE statement is found prior to the use of the variable, it is stored for later use.  When the variable is encountered, if the declaration was found we skip prompting for it's value.  This should reduce the number of prompts you receive when executing SQL (i.e. Functions, Procedures, Events, Packages and so on depending on the naming convention you use for your variables.
    - Updated the tutorial and added more links to different sections see |dbext-tutorial-variable|
    - Added VB filetype support (Garrison Yu).
    - Added escaping to allow specifying an new Oracle URL syntax for server connection parameters (Anton Sharonov).
    - Renamed DBCloseResults, DBOpenResults, DBRefreshResult, DBToggleResultsResize to DBResultsClose, DBResultsOpen, DBResultsRefresh, DBResultsToggleResize to be more consistent.
    
    Bug Fixes
    ---------
    - You are often repeatedly prompted for connection information.  This change reduces the number and allows you to cancel out of the prompt dialogs.
    - Added an unconditional quit command to exit out of Oracle's SQLPlus (Anton Sharonov).

 autoload/dbext.vim     |  711 ++++++++++++++++++++++++++++++++++++++----------
 autoload/dbext_dbi.vim |    6 +-
 doc/dbext.txt          |  324 ++++++++++++++++------
 plugin/dbext.vim       |   94 ++++---
 4 files changed, 872 insertions(+), 263 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/8.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Thu Oct 30 00:00:00 2008 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 8.00
    
    Posted by David Fishburn
    New Features
    ------------
    - When defining a profile or running DBPromptForBufferParameters, you can now optionally specify a file containing commands you want to execute against the database when you first connect (James Horine).
    - A new global variable, g:dbext_default_login_script_dir allows you to override the 2 default directories which are searched for these files.
    - The dbext tutorial has been updated to demonstrate the login_script.
    - Doc update demonstrating the use of integrated logins (Daren Thomas).
    - Added a new user defined autocommand dbextPreConnection which is triggered prior to dbext connecting to the database.  This allows you to customize settings based on your buffer and environment (Tim Pope).
    
    Bug Fixes
    ---------
    - Setting LongReadLen for DBI and ODBC connections did not work.

 autoload/dbext.vim     |  245 +++++++++++++++++++++++++++++++++++++-----------
 autoload/dbext_dbi.vim |  102 ++++++--------------
 doc/dbext.txt          |  117 +++++++++++++++++++++--
 plugin/dbext.vim       |    6 +-
 4 files changed, 331 insertions(+), 139 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/7.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sun Sep 21 00:00:00 2008 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 7.00
    
    Posted by David Fishburn.
    New Features
    ------------
    - Large change between how the error handling between DBI and ODBC  connections were reported and displayed.
    - Non-printable characters are now dealt with for DBI and ODBC connections.
    
    Bug Fixes
    ---------
    - Using ODBC to connect to SQL Server, dbext did not handle informational messages appropriately leading to "not connected" messages (Albie Janse van Rensburg).
    - When executing SQL if you were prompted for a variable replacement and cancelled the query the dbext history window was displayed instead of returning to the buffer.

 autoload/dbext.vim     |  145 ++---------
 autoload/dbext_dbi.vim |  740 +++++++++++++++++++++++++++++++++--------------
 doc/dbext.txt          |   29 ++-
 plugin/dbext.vim       |    6 +-
 4 files changed, 566 insertions(+), 354 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/6.20)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sat Aug 9 00:00:00 2008 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 6.20
    
    Posted by David Fishburn
    Bug Fixes
    ---------
    - Changed the DB2 TOP X syntax (DBExecSQLTopX).
    - Changed the query used to retrieve the current line for DBExecSQLUnderCursor when no text is selected (Sergey Alekhin).
    - When parsing a SQL statement for host variables it was possible to miss excluding the INTO clause correctly (Sergey Alekhin).

 autoload/dbext.vim     |   24 ++++++++++++------------
 autoload/dbext_dbi.vim |   12 ++++++------
 doc/dbext.txt          |   23 +++++++++++++++++++----
 plugin/dbext.vim       |   16 ++++++++--------
 4 files changed, 45 insertions(+), 30 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/6.10)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Jun 10 00:00:00 2008 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 6.10
    
    Posted by David Fishburn
    New Features
    ------------
    - The result window inherits the connection parameters of the buffer which last executed SQL (Antony Scriven).  For example, if you retrieve a list of tables, you may want to describe a table or generate a list of columns for one of the tables.  Using the usual maps will generate the result you need without prompting for connection parameters.  This is especially useful if you have more than 1 buffer and each buffer connects to different databases.
    - Added the ability to choose where to put the Result window.  When the window is split you can choose vertical or horizontal, bottom or top, and choose the the width of the window for horizontal switches (Clinton Jones).
    - Modified DBExecSQLUnderCursor to select all text until end of line if no valid command terminator is found rather than just one letter (David Venus).
    - DBGetOption displays the output from :ver for debugging.
    
    Bug Fixes
    ---------
    - Tutorial update (Nico Coetzee).
    - Tutorial update (Clinton Jones).
    - DBGetOption reported an exception E730: using List as a String.

 autoload/dbext.vim     |  281 +++++++++++++++++++++++++++++++++++++++---------
 autoload/dbext_dbi.vim |    6 +-
 doc/dbext.txt          |  132 ++++++++++++++++++++---
 plugin/dbext.vim       |   10 ++-
 4 files changed, 360 insertions(+), 69 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/6.01)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Apr 29 00:00:00 2008 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 6.01
    
    Posted by David Fishburn
    Bug Fixes
    ---------
    - On dbext startup an error was reported indicating mapleader was not defined (Matt).

 autoload/dbext.vim       |    6 +-
 autoload/dbext_dbi.vim   |    6 +-
 autoload/sqlcomplete.vim |  693 ----------------------------------------------
 doc/dbext.txt            |   12 +-
 plugin/dbext.vim         |   74 +++---
 5 files changed, 53 insertions(+), 738 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/6.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Mon Apr 28 00:00:00 2008 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 6.00
    
    Posted by David Fishburn
    
    New Features
    ------------
    - dbext now supports table and column names which can contain spaces (Antony Scriven).  There is a corresponding change to sqlcomplete.vim to support this.
    - Added an autoclose option.  If you execute SQL which does not return a result set you can choose to have the dbext results window automatically close (unless of course there was an error).  See the autoclose option for more details.
    - Added the map shortcuts to each of menu items under the dbext menu so that users can learn them more easily (Alexander Langer).
    - Using the menu_mode option you can control if and where the dbext menu is created (Marty Grenfell).  See the menu_mode option for more details.
    - For MySQL, added -t as part of the default command line parameters setting.  This will properly format the data into tabs or spaces to make it more readable (Luke Cordingley).
    - A message is displayed indicating the time a SQL command began executing.  The result window also contains the time the SQL finished executing.
    - DBI or ODBC can now fetch BLOB columns from the database.  By default these are truncated at 500 characters, but that can be changed by issuing: DBSetOption driver_parms=LongReadLen=4096
    
    Bug Fixes
    ---------
    - If a database column had an emdedded double quote this would be displayed as \" in the dbext result window (Jean-Christophe Clavier).
    - When loading the plugin, it will now check to ensure the map does not already exist before attempting to create it.  This will prevent errors when mappings clash (Antony Scriven).
    - If you prompt for connection parameters using the DBI or ODBC types we need to disconnect any existing connections or the existing connection will continue to be used.
    - In some cases when using DBI or ODBC an error was not reported and only a blank result set was returned.  Now the database error is reported back to the user.
    - Data retrieved via DBI or ODBC which contained a backslash were not escaped properly and could disappear.

 autoload/dbext.vim       |  879 ++++++++++++++++++++++++++++++----------------
 autoload/dbext_dbi.vim   |  265 ++++++++++++---
 autoload/sqlcomplete.vim |  693 ++++++++++++++++++++++++++++++++++++
 doc/dbext.txt            |  252 ++++++++++----
 plugin/dbext.vim         |  259 +++++++-------
 5 files changed, 1813 insertions(+), 535 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/5.20)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sat Sep 15 00:00:00 2007 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 5.20
    
    Posted by David Fishburn.
    New Features
    ------------
    - When using DBI or DBI::ODBC null fields are now displayed as NULL instead of empty spaces (now you can distinguish between them).
    - When using DBI or DBI::ODBC you can specify the column separator
    :let g:dbext_default_dbi_column_delimiter="\t" (Jean-Christophe Clavier)
    - When using DBI or DBI::ODBC and you use a vertical orientation for the result set, if there are any embedded newline characters in your data this will be displayed and shifted to align with the column above.  Prior to this all newlines were stripped from the output when printing to preserve standard horizontal output (Jean-Christophe Clavier).

 autoload/dbext.vim     |    8 +++--
 autoload/dbext_dbi.vim |   69 ++++++++++++++++++++++++++++++++++--------------
 doc/dbext.txt          |   25 ++++++++++++++++-
 plugin/dbext.vim       |    6 ++--
 4 files changed, 80 insertions(+), 28 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/5.11)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Mon Sep 10 00:00:00 2007 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 5.11
    
    Posted by David Fishburn.
    New Features ------------
    - Added support for Oracle Rdb on an Open VMS Node.
    For vim on Open VMS look at http://www.polarhome.com/vim/.
    For Open VMS http://h71000.www7.hp.com/openvms/.
    Development of Rdb support by Andi Stern

 autoload/dbext.vim     |  277 ++++++++++++++++++++++++++++++++++++++++++++----
 autoload/dbext_dbi.vim |    6 +-
 doc/dbext.txt          |   14 ++-
 plugin/dbext.vim       |    6 +-
 4 files changed, 275 insertions(+), 28 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/5.06)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Mon Sep 3 00:00:00 2007 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 5.06
    
    Posted by David Fishburn.
    New Features
    ------------
    - Added Perl's DBI and DBI::ODBC support.  This opens additional database support without having to adjust scripts.  You must have a Perl enabled Vim (:echo has('perl')).  Using the DBI layer offers some advantages over using the native binary tools:
           - Transaction support which allows you to maintain a transaction during your editing session and either commit or rollback and changes.  This is not possible without using the DBI layer.
           - Speed improvements, since the database connection is maintained, the there is less overhead per command.
    Huge thanks to Jean-Christophe Clavier and Albie Janse van Rensburg for their beta testing and suggestions.
    
    - New commands are available to select only a few rows instead of an entire result set.  In most databases this is referred to as TOP X.  DBExecSQLTopX, DBExecVisualSQLTopX, DBExecSQLUnderCursorTopX have been added plus associated mappings (Albie Janse van Rensburg).
    - Made Cygwin detection a bit easier using the shellslash option (Steve Gibson)
    
    Bug Fixes
    ------------
    - SQL Server support had issues with the queries when running DBCompleteTable, DBCompleteProcedure, DBCompleteView which also affected the sqlcomplete.vim plugin included with Vim7 (Albie Janse van Rensburg).
    - Oracle reported "rows will be truncated", added "set linesize 10000" to the Oracle headers (Stuart Brock)
    - When prompting for connection parameters if you choose a profile of "0" which is no profile, you had to re-run the wizard to prompt for the rest of the parameters, now the wizard continues as expected.

 autoload/dbext.vim     | 6381 ++++++++++++++++++++++++++++++++++++++++++++++++
 autoload/dbext_dbi.vim | 1220 +++++++++
 doc/dbext.txt          |  713 +++++-
 doc/dbext_gpl.dat      |  280 +++
 plugin/dbext.vim       | 4521 ++---------------------------------
 5 files changed, 8660 insertions(+), 4455 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/4.20)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Dec 19 00:00:00 2006 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 4.20
    
    Posted by David Fishburn.
    New Features
    - Improved support for Cygwin.  If you are using a Cygwin compiled Vim (on   Windows) and are accessing Windows compiled binaries (i.e. sqlplus.exe) the binary will complain since it does not understand Unix path names.  Added the option g:dbext_default_use_win32_filenames which allows you to indicate the binaries must use translated Windows paths instead. (Richard)
    - DBGetOption displays more information.
    
    Bug Fixes
    - SQL Server support had issues with the queries when running DBCompleteTable, DBCompleteProcedure, DBCompleteView which also affected the sqlcomplete.vim plugin included with Vim7 (Albie Janse van Rensburg).

 doc/dbext.txt    |   32 ++++++++++++++++++++++++++++++--
 plugin/dbext.vim |   35 +++++++++++++++++++++++++++++------
 2 files changed, 59 insertions(+), 8 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/4.10)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Dec 5 00:00:00 2006 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 4.10
    
    Posted by David Fishburn.
    New Features
    ------------
    - Updated DBGetOption to additionally display a list of all database profiles and their types.  All dbext options that have been overriden via the vimrc are also displayed.
    
    Bug Fixes
    ------------
    - db2 support had issues with the queries when running DBCompleteTable, DBCompleteProcedure, DBCompleteView which also affected the sqlcomplete.vim plugin included with Vim7 (Peter Princz).
    - The documentation was still indicating there was a plugin dependency which has been removed with Vim7.

 doc/dbext.txt    |   27 ++++++++++++---
 plugin/dbext.vim |   95 ++++++++++++++++++++++++++++++++++++++----------------
 2 files changed, 89 insertions(+), 33 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/4.03)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sat Sep 23 00:00:00 2006 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 4.03
    
    Posted by David Fishburn.
    New Features
    ------------
    - dbext.vim now requires Vim7.
    - dbext.vim no longer has dependencies on other plugins by utilizing the new Vim7 features (Lists and Dictionaries).
    - When using the DBCompleteTable, DBCompleteProcedure, DBCompleteView commands errors are displayed instead of silently ignored.  This makes them more useful with the sqlComplete plugin (see |sql.txt|).
    - Added new option, dbext_default_MYSQL_version, for MySQL to indicate the version you using.
    - You can optionally define a function, DBextPostResult, in your .vimrc, this function will be called each time the result window is updated.  This function can be used to do anything, for example, syntax highlighting the result set in the result window.
    
    Bug Fixes
    ------------
    - Added version support with MySQL to control what SQL is sent for version 4 and 5 servers.

 doc/dbext.txt    |   66 ++++++-
 plugin/dbext.vim |  616 ++++++++++++++++++++++++++----------------------------
 2 files changed, 358 insertions(+), 324 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/3.50)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Jun 20 00:00:00 2006 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 3.50
    
    New Features
    ------------
     - g:dbext_default_inputdialog_cancel_support = 0 will prevent inputdialog from providing a cancel option.  This works around a Vim7 bug.  dbext will automatically detect this and set the option the first time it is encountered.
     - Changed the order of some of the text in the dialog boxes to make them more readable when using the console version of Vim.
     - dbext can parse SQL statements and prompt the user to replace variables with values prior to sending the statement to the database to be executed.  This is useful for testing SQL which is embedded in your code without having to manually replace variables and string concatentation.  A new identifier (the until flag) allows you to specify the beginning of a string and what to prompt for until a finishing string.  This makes it more flexible for you to configure what you would like prompting for when looking for variables.
    
    Bug Fixes
    ------------
     - DBPromptForBufferParameters can report "E180: Invalid complete value: -1" if running the console version of Vim.  dbext will detect this problem and automatically set g:dbext_default_inputdialog_cancel_support = 0 to work around this Vim7 bug.

 doc/dbext.txt    |   84 +++++++++++++++++++++++++++++++++++--
 plugin/dbext.vim |  121 ++++++++++++++++++++++++++++++++++++++++--------------
 2 files changed, 169 insertions(+), 36 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/3.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Mon May 15 00:00:00 2006 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 3.00
    
    New Features
    ------------
    - dbext supports a history of previous commands.  The DBHistory command will display a numbered list of previous SQL statements.  Pressing <enter> or double clicking on one of the items will execute the statement.  The number of items in the list is configurable via your vimrc.  The history items are stored in a file, dbext_sql_history.txt.  The location of the file can also be controlled.
    - The 'refresh' feature added in version 2.30 has been updated to take advantage of the history feature.
    - The PHP parser has improved and can handle single or double quoted strings, string concatenation and host variables.  It will correctly strip the quotes, join the concatenated strings and prompt the user for host variables before executing the SQL statement.
    - Updated documentation for Vim 7 SQL code completion.
    - Table, procedure and view dictionaries include the owner name of the object.  This is on by default, but can be controlled via a new global option, dbext_default_dict_show_owner.  This has not been enabled for all databases it depends on whether the database supports this feature.  The autoload\sqlcomplete.vim plugin takes advantage of this feature.
    - Added support for stored procedures / functions in MySQL 5.
    
    Bug Fixes
    ------------
    - Updated the PHP parser to work with a more varied string quotes and string concatenation.
    - The "extra" feature did not add a leading space for MySQL.  Using the tabbed output required updates to the parsing of the output generated by MySQL.
    - Miscellaneous documentation updates.

 doc/dbext.txt    |  178 ++++++++++++--
 plugin/dbext.vim |  720 +++++++++++++++++++++++++++++++++++++++++++-----------
 2 files changed, 739 insertions(+), 159 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/2.30)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Tue Sep 13 00:00:00 2005 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 2.30
    
    New Features
     ------------
     - The result window has a local buffer mapping 'R', which will 'refresh' the window.  This means it will re-run the previous statement which is useful if you are repeatedly checking something in the database.
     - SQL Anywhere (ASA) no longer relies on the jcatalogue tables to be installed in the database.  System views are used instead.
     - Support for MySQL 5.0 has been added, which includes stored procedures and views (as much as the beta allowed).
     - For Postgress SQL you can now optionally enter an owner name to filter by when showing list of objects (tables, procedures, views).
    
     Bug Fixes
     ------------
     - The alternate-file is no longer changed the first time the result buffer is opened.
     - Using DB2 with db2cmd incorrectly specified the command terminator with td, instead of -t.
     - On win32 platforms, if the bin_path has been specified for DB2, then add this to the system path since db2cmd relies on other batch files to operate correctly.
     - The connection string is displayed by both the Result buffer (first line) and the titlestring to the buffer (if enabled).  This was not correctly appending the user used to connect to the database.
     - When parsing Vim scripts we did not correctly remove a leading line continuation slash from the from of a query.

 doc/dbext.txt    |   49 +++++-
 plugin/dbext.vim |  486 +++++++++++++++++++++++++++++++++---------------------
 2 files changed, 340 insertions(+), 195 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/2.20)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Thu Mar 10 00:00:00 2005 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 2.20
    
     New Features
     ------------
     - Added new connection parameter called "extra", you can place any
    additional command line parameters in this option.
     - DBGetOption displays all options including the dbext version.
     - Better support for command terminators that have newline or special
    characters in them.  For example ASE/SQLSRV use "\ngo\n", now the command
    DBExecSQLUnderCursor will correctly find the statement.
     - Use_tbl_alias defaults to "ask", instead of "default on".
     - For most supported databases, when displaying the Table / Procedure /
    View List, you can now enter a partial string "DBA.", and if a . is included
    it will only display objects created / owned by that userid.
     - DBExecSQLUnderCursor would sometimes stop in the middle of a query if the
    command terminator was included (inside a quoted string), now it ensures
    there is no text following the terminator.
     - The result window also includes the error code returned by the binary
    used to execute the command.  This can be useful for debugging.
     - The first line of the result window includes a line showing the
    connection information, if you have many buffers open, it can be difficult
    to determine which database you are executing commands against.  A glance at
    this line will tell you immediately.
     - g:dbext_default_always_prompt_for_variables = 0 will prevent you from
    being prompted for substitution parameters.  Setting this value to 1 will
    always prompt the user.
     - You can now abort the execution of a statement if you are prompted for
    substitution parameters.
     - If you are prompted for parameters, if you choose "Stop Prompting" the
    command will be executed immediate.  If "Never Prompt" is chosen, no further
    prompting will occur for this buffer.
    
     Bug Fixes
     ---------
     - SQLSRV did not have a default command terminator, now it is "\ngo\n".
     - Changed the Oracle command terminator to ";", and the routine that
    executes the statements automatically adds the "\nquit;\n" so that   sqlplus
    will complete.
     - Spaces were not correctly removed from column lists in all cases, this
    showed up as an issue with the SQL Intellisense plugin.
     - When executing SELECT statements the INTO clause (if present) is removed
    so the results are displayed in the result window.  Refined the removal of
    the INTO clause to ensure it does not interfer with an INSERT or MERGE
    statement.

 doc/dbext.txt    |   79 ++++++++++++++-
 plugin/dbext.vim |  274 ++++++++++++++++++++++++++++++++++++-----------------
 2 files changed, 259 insertions(+), 94 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/2.11)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Fri Sep 24 00:00:00 2004 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 2.11
    
    Bug fix: On some platforms the temporary file created to execute SQL
    statements must end in ".sql".  Corrected this for all databases.

 doc/dbext.txt    |    6 ++--
 plugin/dbext.vim |   58 ++++++++++++++++++++++++++++++++++++++++--------------
 2 files changed, 46 insertions(+), 18 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/2.10)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Wed Sep 15 00:00:00 2004 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 2.10
    
    New Features
    - Support for the SQLite database has been added (thanks to Ron Aaron).

 doc/dbext.txt    |  116 ++++++++++--
 plugin/dbext.vim |  577 ++++++++++++++++++++++++++++++++++++++++++++----------
 2 files changed, 576 insertions(+), 117 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/2.01)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Thu Jul 22 00:00:00 2004 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 2.01
    
    New Features
    - Tutorial - Based on feedback from users, created a step by step tutorial.
    All users should try the tutorial to learn how to use the various features
    of the plugin.
    - DBGetOption - without parameters populates the Result window with all
    options.
    - DBGetOption and DBSetOption support command line completion for the
    various options (DBGetOption d<tab>, will cycle through all options
    beginning with "d").
    - New option, replace_title, changes the title of the buffer to show
    connection information which is useful if you are using  a scratch buffer to
    test SQL.
    - IntegratedLogin support for Windows users.
    - DBExecRangeSQL - useful for custom mappings, and executing commands
    without visual mode.
    - New maps <Leader>sea - sql - execute - all (lines in the file),
    <Leader>sel - sql - execute - line (the current line)
    - New filetype support - jproperties
    
    
    Bug Fixes
    - dbname was not defaulting correctly.
    - bin_path did not work correctly on windows platforms.
    - Updated the connection text in the Result buffer.
    - Overhauled the DB2 support.

 doc/dbext.txt    |  742 ++++++++++++++++++++++++++++++++++++++++++++++++-----
 plugin/dbext.vim |  762 +++++++++++++++++++++++++++++++++++++-----------------
 2 files changed, 1202 insertions(+), 302 deletions(-)

commit SHA1SHA1SHA1 (tag: refs/tags/2.00)
Author:     Peter Bagyinszki <petike1@gmail.com>
AuthorDate: Sun Jul 11 00:00:00 2004 +0000
Commit:     Able Scraper <scraper@vim-scripts.org>

    Version 2.00
    
    dbext.vim has been greatly enhanced for version 2.00.
    
    Additional features include:
    
    Connection Profiles
    You can create as many profiles as you like in your vimrc.  Each profile specifies various connection information.  When you are prompted for connection information, for ease of use,  you can choose from a numbered list.
    
    Modeline Support
    Similar to Vim modelines, you can specify connection information as comments within your buffers.  To prevent sensitive information (ie passwords) from being visible, you can specify a connection profile as part of your modeline.
    
    Object Completion
    dbext ties into Vim dictionary feature.  You can complete table names, procedure names and view names.
    
    Viewing Lists of Objects
    You can browse through the various objects in the database you are connected
    to and specify wildcard information.  For example you can say, "Show me all
    tables beginning with 'ml_' ".  These objects are currently supported:
    Tables, Procedures, Views,  Columns (for a table).
    
    FileType Support Added
    dbext has support for various filetypes.  For example, assume you dynamically build a SQL statement by joining strings together, using calls to functions, host parameters.  By visually selecting the code and executing it dbext will parse the statement, strip out the various string joining commands (+, ||,  .) and prompt you for host values before sending the string to be executed against the database.  This way it is very easy to test your SQL statements without having to cut and paste the commands into a SQL tool.  Currently supported filetypes are: PHP, Java, JSP, JavaScript, Perl, SQL, Vim.
    
    Intellisense Addin Support
    The Intellisense  plugin now has SQL supported.  To enable greater functionality (table, procedure, view lists), it uses dbext.vim to retrieve this information.

 README           |  126 +++
 doc/dbext.txt    |  819 ++++++++++++++
 plugin/dbext.vim | 3278 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 4223 insertions(+), 0 deletions(-)
